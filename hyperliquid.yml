x-logging: &logging
  logging:
    driver: json-file
    options:
      max-size: 100m
      max-file: "3"
      tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'

services:
  node:
    build:
      context: ./hyperliquid
      args:
        - PUB_KEY_URL=${PUB_KEY_URL}
        - USERNAME=${USERNAME:-hyperliquid}
    image: hyperliquid:local
    user: "${USERNAME:-hyperliquid}"
    restart: unless-stopped
    # healthcheck:
    #   test: |
    #     CMD-SHELL
    #     curl -s -X POST \\
    #          -H "Content-Type: application/json" \\
    #          --data '{"jsonrpc":"2.0","method":"eth_syncing","params":[],"id":1}' \\
    #          http://localhost:$${ETH_RPC_PORT:-3001}/evm | jq -e '.result == false'
    #   interval: 10s
    #   timeout: 15s
    #   retries: 3
    #   start_period: 30s
    environment:
      - DAEMON_VERSION=${HL_NODE_VERSION:-latest}
      - EXTRA_FLAGS=${EXTRA_FLAGS:-}
      - CHAIN=${CHAIN:-Mainnet}
      - MONIKER=${MONIKER:-hyperliquid-docker}
      - GOSSIP_PORT_1=${GOSSIP_PORT_1:-4001}
      - GOSSIP_PORT_2=${GOSSIP_PORT_2:-4002}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - ENABLE_RPC=${ENABLE_RPC:-true}
      - NODE_TYPE=${NODE_TYPE:-non-validator}
      - VALIDATOR_PRIVATE_KEY=${VALIDATOR_PRIVATE_KEY:-}
      - MAINNET_ROOT_IPS=${MAINNET_ROOT_IPS}
      - TESTNET_ROOT_IPS=${TESTNET_ROOT_IPS}
      - MAINNET_GOSSIP_TRY_NEW_PEERS=${MAINNET_GOSSIP_TRY_NEW_PEERS}
      - TESTNET_GOSSIP_TRY_NEW_PEERS=${TESTNET_GOSSIP_TRY_NEW_PEERS}
    ports:
      - ${GOSSIP_PORT_1:-4001}:${GOSSIP_PORT_1:-4001}/tcp
      - ${GOSSIP_PORT_2:-4002}:${GOSSIP_PORT_2:-4002}/tcp
      - ${VAL_PORT_3:-4003}:${VAL_PORT_3:-4003}/tcp
      - ${VAL_PORT_4:-4004}:${VAL_PORT_4:-4004}/tcp
      - ${VAL_PORT_5:-4005}:${VAL_PORT_5:-4005}/tcp
      - ${VAL_PORT_6:-4006}:${VAL_PORT_6:-4006}/tcp
    <<: *logging
    volumes:
      - consensus-data:/home/${USERNAME}/hl/data
      - ./entrypoint.sh:/home/${USERNAME}/entrypoint.sh:ro
    entrypoint: >
      sh -c '
      echo "Starting Hyperliquid node in ${NODE_TYPE:-non-validator} mode for ${CHAIN:-Mainnet}"
      exec sh /home/${USERNAME}/entrypoint.sh
      '
    labels:
      - traefik.enable=true
      - traefik.http.routers.${RPC_HOST:-hyperliquid}.service=${RPC_HOST:-hyperliquid}
      - traefik.http.routers.${RPC_HOST:-hyperliquid}.entrypoints=websecure
      - traefik.http.routers.${RPC_HOST:-hyperliquid}.rule=Host(`${RPC_HOST:-hyperliquid}.${DOMAIN:-local}`)
      - traefik.http.routers.${RPC_HOST:-hyperliquid}.tls.certresolver=letsencrypt
      - traefik.http.services.${RPC_HOST:-hyperliquid}.loadbalancer.server.port=${ETH_RPC_PORT:-3001}
      - metrics.scrape=true
      - metrics.path=/metrics
      - metrics.port=${ETH_RPC_PORT:-3001}
      - metrics.instance=${RPC_HOST:-hyperliquid}
      - metrics.network=${CHAIN:-Mainnet}

  # pruner:
  #   restart: unless-stopped
  #   build:
  #     context: ./hyperliquid/pruner
  #     args:
  #       - USERNAME=${USERNAME:-hyperliquid}
  #   volumes:
  #     - consensus-data:/home/${USERNAME}/hl/data
  #   image: hyperliquid-pruner:local
  #   pull_policy: never
  #   user: root
  #   stop_grace_period: 10s
  #   environment:
  #     - PRUNE_SCHEDULE=${PRUNE_SCHEDULE:-0 3 * * *}
  #     - PRUNE_RETAIN_DAYS=${PRUNE_RETAIN_DAYS:-7}
  #     - LOG_LEVEL=${LOG_LEVEL:-info}
  #   <<: *logging

volumes:
  consensus-data:
